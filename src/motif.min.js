const motif=function(){var proto;function Motif(){}function loadMethods(response){var fn={};if(response){var tmp=document.createElement("div");fn.response=response,tmp.innerHTML=response,fn.insert=function(selector){return fn.insert=tmp.querySelector(selector),fn},fn.insertAll=function(selector){var items=[],nodes=tmp.querySelectorAll(selector);for(let i=0;i<nodes.length;i++)items.push(nodes[i]);return fn.insert=items,fn},fn.into=function(selector){fn.insert instanceof Array?fn.insert instanceof Array&&fn.insert.forEach(item=>{document.querySelector(selector).append(item)}):document.querySelector(selector).append(fn.insert)},fn.insertInto=function(props){for(let key in props)if(key.match(/{all}/gim)){var key=key.replace(/(| ){all}(| )/gim,""),insert=tmp.querySelectorAll(key),nodeList=[];for(let i=0;i<insert;i++)nodeList.push(insert[i]);nodeList.forEach(item=>{document.querySelector(props[key]).append(item)})}else{var insert=tmp.querySelector(key);document.querySelector(props[key]).append(insert)}}}return fn}return Motif.prototype.load=function(url,callback){var xr=new XMLHttpRequest;xr.open("GET",url,!0),xr.onreadystatechange=()=>{if(4===xr.readyState&&200===xr.status){var response=xr.responseText;callback&&callback(loadMethods(response))}},xr.send()},new Motif}();